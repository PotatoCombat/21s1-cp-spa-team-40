1 - all procedures that calls another procedure (procedure declaration, tuple with 2 variables return)
procedure p1, p2;
Select <p1, p2> such that Calls(p1, p2)
proc1 proc6,proc1 proc7,proc2 proc6,proc2 proc7,proc3 proc4,proc3 proc5,proc3 proc6,proc3 proc7,proc4 proc5,proc4 proc6,proc4 proc7,proc5 proc6,proc5 proc7,proc6 proc7
5000
2 - all procedures that calls another procedure that calls itself i.e. semantically invalid, return none (procedure declaration, tuple with 2 variables return)
procedure p1, p2;
Select <p1, p2> such that Calls(p1, p2) and Calls(p2, p1)
none
5000
3- all procedures that calls another procedure that calls another procedure (procedure declaration, tuple with 3 variables return)
procedure p1, p2, p3;
Select <p1, p2, p3> such that Calls(p1 ,p2) and Calls(p2, p3) 
proc1 proc2 proc6,proc1 proc2 proc7,proc1 proc3 proc4,proc1 proc3 proc5,proc1 proc3 proc6,proc1 proc3 proc7,proc1 proc4 proc5,proc1 proc4 proc6,proc1 proc4 proc7,proc1 proc5 proc6,proc1 proc5 proc7,proc1 proc6 proc7,proc2 proc3 proc4,proc2 proc3 proc5,proc2 proc3 proc6,proc2 proc3 proc7,proc2 proc4 proc5,proc2 proc4 proc6,proc2 proc4 proc7,proc2 proc5 proc6,proc2 proc5 proc7,proc2 proc6 proc7,proc3 proc4 proc5,proc3 proc4 proc6,proc3 proc4 proc7,proc3 proc5 proc6,proc3 proc5 proc7,proc3 proc6 proc7,proc4 proc5 proc6,proc4 proc5 proc7,proc4 proc6 proc7,proc5 proc6 proc7
5000
4 - all procedures that calls another procedure that calls another procedure that... (procedure declaration, tuple with 7 variables return)
procedure p1, p2, p3, p4, p5, p6, p7;
Select <p1, p2, p3, p4, p5, p6, p7, p8, p9, p10> such that Calls(p1 ,p2) and Calls(p2, p3) and Calls(p3, p4) and Calls(p4, p5) and Calls(p5, p6) and Calls(p6, p7)    
none
5000
5 - all procedures that calls* another procedure (procedure declaration, tuple with 2 variables return)
procedure p1,  p2;
Select <p1, p2> such that Calls*(p1 ,p2)
proc1 proc6,proc1 proc7,proc2 proc6,proc2 proc7,proc3 proc4,proc3 proc5,proc3 proc6,proc3 proc7,proc4 proc5,proc4 proc6,proc4 proc7,proc5 proc6,proc5 proc7,proc6 proc7
5000
6 - all procedures that calls* another procedure that calls itself i.e. semantically invalid, return none (procedure declaration, tuple with 2 variables return)
procedure p1,  p2;
Select <p1, p2> such that Calls*(p1 ,p2) and Calls*(p2 ,p1)
none
5000
7 - all procedures that calls* another procedure that calls* another procedure (procedure declaration, tuple with 3 variables return)
procedure p1,  p2, p3;
Select <p1, p2> such that Calls*(p1 ,p2) and Calls*(p2 ,p3)
proc1 proc3,proc1 proc4,proc1 proc5,proc1 proc6,proc2 proc3,proc2 proc4,proc2 proc5,proc2 proc6,proc3 proc4,proc3 proc5,proc3 proc6,proc4 proc5,proc4 proc6,proc5 proc6
5000
7 - all procedures that calls* another procedure that calls* another procedure (procedure declaration, tuple with 4 variables return)
procedure p1,  p2, p3;
Select <p1, p2> such that Calls*(p1 ,p2) and Calls*(p2 ,p3)
proc1 proc3,proc1 proc4,proc1 proc5,proc1 proc6,proc2 proc3,proc2 proc4,proc2 proc5,proc2 proc6,proc3 proc4,proc3 proc5,proc3 proc6,proc4 proc5,proc4 proc6,proc5 proc6
5000
8 - all procedures that calls* another procedure that calls* another procedure that... (procedure declaration, tuple with 7 variables return)
procedure p1, p2, p3, p4, p5, p6, p7;
Select <p1, p2, p3, p4, p5, p6, p7> such that Calls*(p1 ,p2) and Calls*(p2, p3) and Calls*(p3, p4) and Calls*(p4, p5) and Calls*(p5, p6) and Calls*(p6, p7)
proc1 proc2 proc3 proc4 proc5 proc6 proc7
5000
10 - all program lines that execute next after another program line (read declaration, tuple with 2 variables return)
read r1, r2;
Select <r1, r2> such that Next(r1, r2)
102 106,11 13,110 113,110 118,115 118,22 24,22 29,27 28,28 32,31 24,31 29,32 29,46 48,55 51,55 56,58 61,6 22,6 27,6 32,63 64,72 79,74 77,77 79,78 77,83 86,86 88,93 95,95 93,95 99,96 97,97 100,97 96
5000
11 - all program lines that execute next after another program line that executes itself next (read declaration, tuple with 2 variables return)
read r1, r2;
Select <r1, r2> such that Next(r1, r2) and Next(r2, r1)
93 95,95 93,96 97,97 96
5000
12 - all program lines that execute next after another program line that execute next after another program line (read declaration, tuple with 3 variables return)
read r1, r2, r3;
Select <r1, r2, r3> such that Next(r1 ,r2) and Next(r2, r3) 
27 28 32,28 32 29,6 22 24,6 22 29,6 27 28,6 32 29,74 77 79,78 77 79,83 86 88,93 95 93,93 95 99,95 93 95,96 97 100,96 97 96,97 96 97
5000
13 - all program lines that execute next after another program line that execute next after another program line that executes itself next (read declaration, tuple with 3 variables return)
read r1, r2, r3;
Select <r1, r2, r3> such that Next(r1 ,r2) and Next(r2, r3) and Next(r3, r1)
none
5000
14 - all program lines that execute next after another program line that execute next... (read declaration, tuple with 4 variables return)
read r1, r2, r3, r4;
Select <r1, r2, r3, r4> such that Next(r1 ,r2) and Next(r2, r3) and Next(r3, r4) 
27 28 32 29,6 27 28 32,93 95 93 95,95 93 95 93,95 93 95 99,96 97 96 97,97 96 97 100,97 96 97 96
5000
15 - all program lines that execute next after another program line that execute next... (read declaration, tuple with 10 variables return)
read r1, r2, r3, r4, r5, r6, r7, r8, r9, r10;
Select <r1, r2, r3, r4, r5, r6, r7, r8, r9, r10> such that Next(r1 ,r2) and Next(r2, r3) and Next(r3, r4) and Next(r4, r5) and Next(r5, r6) and Next(r6, r7) and Next(r7, r8) and Next(r8, r9) and Next(r9, r10)    
93 95 93 95 93 95 93 95 93 95,95 93 95 93 95 93 95 93 95 93,95 93 95 93 95 93 95 93 95 99,96 97 96 97 96 97 96 97 96 97,97 96 97 96 97 96 97 96 97 100,97 96 97 96 97 96 97 96 97 96
5000
25 - all program lines that execute next* after another program line (read declaration, tuple with 2 variables return)
read r1,  r2;
Select <r1, r2> such that Next*(r1 ,r2)
102 106,11 13,110 113,110 118,115 118,22 24,22 29,27 28,27 29,27 32,28 29,28 32,31 24,31 29,32 29,46 48,55 51,55 56,58 61,6 22,6 24,6 27,6 28,6 29,6 32,63 64,72 79,74 77,74 79,77 79,78 77,78 79,83 86,83 88,86 88,93 93,93 95,93 99,95 93,95 95,95 99,96 100,96 96,96 97,97 100,97 96,97 97
5000
26 - all program lines that execute next* after another program line that executes itself next* (read declaration, tuple with 2 variables return)
read r1,  r2;
Select <r1, r2> such that Next*(r1 ,r2) and Next*(r2 ,r1)
93 93,93 95,95 93,95 95,96 96,96 97,97 96,97 97
5000
27 - all program lines that execute next* after another program line that execute next* after another program line (read declaration, tuple with 2 variables return)
read r1,  r2, r3;
Select <r1, r2, r3> such that Next*(r1 ,r2) and Next*(r2 ,r3)
27 28,27 32,28 32,6 22,6 27,6 28,6 32,74 77,78 77,83 86,93 93,93 95,95 93,95 95,96 96,96 97,97 96,97 97
5000
28 - all program lines that execute next* after another program line that execute next* after another program line that executes itself next* (read declaration, tuple with 2 variables return)
read r1,  r2, r3;
Select <r1, r2, r3> such that Next*(r1 ,r2) and Next*(r2 ,r3) and Next*(r3 ,r1)
93 93,93 95,95 93,95 95,96 96,96 97,97 96,97 97
5000
29 - all program lines that execute next* after another program line that execute next*... (read declaration, tuple with 4 variables return)
read r1, r2, r3, r4;
Select <r1, r2, r3, r4> such that Next*(r1 ,r2) and Next*(r2, r3) and Next*(r3, r4) 
27 28 32 29,6 27 28 29,6 27 28 32,6 27 32 29,6 28 32 29,93 93 93 93,93 93 93 95,93 93 93 99,93 93 95 93,93 93 95 95,93 93 95 99,93 95 93 93,93 95 93 95,93 95 93 99,93 95 95 93,93 95 95 95,93 95 95 99,95 93 93 93,95 93 93 95,95 93 93 99,95 93 95 93,95 93 95 95,95 93 95 99,95 95 93 93,95 95 93 95,95 95 93 99,95 95 95 93,95 95 95 95,95 95 95 99,96 96 96 100,96 96 96 96,96 96 96 97,96 96 97 100,96 96 97 96,96 96 97 97,96 97 96 100,96 97 96 96,96 97 96 97,96 97 97 100,96 97 97 96,96 97 97 97,97 96 96 100,97 96 96 96,97 96 96 97,97 96 97 100,97 96 97 96,97 96 97 97,97 97 96 100,97 97 96 96,97 97 96 97,97 97 97 100,97 97 97 96,97 97 97 97
5000
30 - all program lines that execute next* after another program line that execute next*... (read declaration, tuple with 9 variables return)
read r1, r2, r3, r4, r5, r6, r7, r8, r9, r10;
Select <r1, r2, r3, r4, r5, r6, r7, r8, r9, r10> such that Next*(r1 ,r2) and Next*(r2, r3) and Next*(r3, r4) and Next*(r4, r5) and Next*(r5, r6) and Next*(r6, r7) and Next*(r7, r8) and Next*(r8, r9) and Next*(r9, r10)
93 93 93 93 93 93 93,93 93 93 93 93 93 95,93 93 93 93 93 93 99,93 93 93 93 93 95 93,93 93 93 93 93 95 95,93 93 93 93 93 95 99,93 93 93 93 95 93 93,93 93 93 93 95 93 95,93 93 93 93 95 93 99,93 93 93 93 95 95 93,93 93 93 93 95 95 95,93 93 93 93 95 95 99,93 93 93 95 93 93 93,93 93 93 95 93 93 95,93 93 93 95 93 93 99,93 93 93 95 93 95 93,93 93 93 95 93 95 95,93 93 93 95 93 95 99,93 93 93 95 95 93 93,93 93 93 95 95 93 95,93 93 93 95 95 93 99,93 93 93 95 95 95 93,93 93 93 95 95 95 95,93 93 93 95 95 95 99,93 93 95 93 93 93 93,93 93 95 93 93 93 95,93 93 95 93 93 93 99,93 93 95 93 93 95 93,93 93 95 93 93 95 95,93 93 95 93 93 95 99,93 93 95 93 95 93 93,93 93 95 93 95 93 95,93 93 95 93 95 93 99,93 93 95 93 95 95 93,93 93 95 93 95 95 95,93 93 95 93 95 95 99,93 93 95 95 93 93 93,93 93 95 95 93 93 95,93 93 95 95 93 93 99,93 93 95 95 93 95 93,93 93 95 95 93 95 95,93 93 95 95 93 95 99,93 93 95 95 95 93 93,93 93 95 95 95 93 95,93 93 95 95 95 93 99,93 93 95 95 95 95 93,93 93 95 95 95 95 95,93 93 95 95 95 95 99,93 95 93 93 93 93 93,93 95 93 93 93 93 95,93 95 93 93 93 93 99,93 95 93 93 93 95 93,93 95 93 93 93 95 95,93 95 93 93 93 95 99,93 95 93 93 95 93 93,93 95 93 93 95 93 95,93 95 93 93 95 93 99,93 95 93 93 95 95 93,93 95 93 93 95 95 95,93 95 93 93 95 95 99,93 95 93 95 93 93 93,93 95 93 95 93 93 95,93 95 93 95 93 93 99,93 95 93 95 93 95 93,93 95 93 95 93 95 95,93 95 93 95 93 95 99,93 95 93 95 95 93 93,93 95 93 95 95 93 95,93 95 93 95 95 93 99,93 95 93 95 95 95 93,93 95 93 95 95 95 95,93 95 93 95 95 95 99,93 95 95 93 93 93 93,93 95 95 93 93 93 95,93 95 95 93 93 93 99,93 95 95 93 93 95 93,93 95 95 93 93 95 95,93 95 95 93 93 95 99,93 95 95 93 95 93 93,93 95 95 93 95 93 95,93 95 95 93 95 93 99,93 95 95 93 95 95 93,93 95 95 93 95 95 95,93 95 95 93 95 95 99,93 95 95 95 93 93 93,93 95 95 95 93 93 95,93 95 95 95 93 93 99,93 95 95 95 93 95 93,93 95 95 95 93 95 95,93 95 95 95 93 95 99,93 95 95 95 95 93 93,93 95 95 95 95 93 95,93 95 95 95 95 93 99,93 95 95 95 95 95 93,93 95 95 95 95 95 95,93 95 95 95 95 95 99,95 93 93 93 93 93 93,95 93 93 93 93 93 95,95 93 93 93 93 93 99,95 93 93 93 93 95 93,95 93 93 93 93 95 95,95 93 93 93 93 95 99,95 93 93 93 95 93 93,95 93 93 93 95 93 95,95 93 93 93 95 93 99,95 93 93 93 95 95 93,95 93 93 93 95 95 95,95 93 93 93 95 95 99,95 93 93 95 93 93 93,95 93 93 95 93 93 95,95 93 93 95 93 93 99,95 93 93 95 93 95 93,95 93 93 95 93 95 95,95 93 93 95 93 95 99,95 93 93 95 95 93 93,95 93 93 95 95 93 95,95 93 93 95 95 93 99,95 93 93 95 95 95 93,95 93 93 95 95 95 95,95 93 93 95 95 95 99,95 93 95 93 93 93 93,95 93 95 93 93 93 95,95 93 95 93 93 93 99,95 93 95 93 93 95 93,95 93 95 93 93 95 95,95 93 95 93 93 95 99,95 93 95 93 95 93 93,95 93 95 93 95 93 95,95 93 95 93 95 93 99,95 93 95 93 95 95 93,95 93 95 93 95 95 95,95 93 95 93 95 95 99,95 93 95 95 93 93 93,95 93 95 95 93 93 95,95 93 95 95 93 93 99,95 93 95 95 93 95 93,95 93 95 95 93 95 95,95 93 95 95 93 95 99,95 93 95 95 95 93 93,95 93 95 95 95 93 95,95 93 95 95 95 93 99,95 93 95 95 95 95 93,95 93 95 95 95 95 95,95 93 95 95 95 95 99,95 95 93 93 93 93 93,95 95 93 93 93 93 95,95 95 93 93 93 93 99,95 95 93 93 93 95 93,95 95 93 93 93 95 95,95 95 93 93 93 95 99,95 95 93 93 95 93 93,95 95 93 93 95 93 95,95 95 93 93 95 93 99,95 95 93 93 95 95 93,95 95 93 93 95 95 95,95 95 93 93 95 95 99,95 95 93 95 93 93 93,95 95 93 95 93 93 95,95 95 93 95 93 93 99,95 95 93 95 93 95 93,95 95 93 95 93 95 95,95 95 93 95 93 95 99,95 95 93 95 95 93 93,95 95 93 95 95 93 95,95 95 93 95 95 93 99,95 95 93 95 95 95 93,95 95 93 95 95 95 95,95 95 93 95 95 95 99,95 95 95 93 93 93 93,95 95 95 93 93 93 95,95 95 95 93 93 93 99,95 95 95 93 93 95 93,95 95 95 93 93 95 95,95 95 95 93 93 95 99,95 95 95 93 95 93 93,95 95 95 93 95 93 95,95 95 95 93 95 93 99,95 95 95 93 95 95 93,95 95 95 93 95 95 95,95 95 95 93 95 95 99,95 95 95 95 93 93 93,95 95 95 95 93 93 95,95 95 95 95 93 93 99,95 95 95 95 93 95 93,95 95 95 95 93 95 95,95 95 95 95 93 95 99,95 95 95 95 95 93 93,95 95 95 95 95 93 95,95 95 95 95 95 93 99,95 95 95 95 95 95 93,95 95 95 95 95 95 95,95 95 95 95 95 95 99,96 96 96 96 96 96 100,96 96 96 96 96 96 96,96 96 96 96 96 96 97,96 96 96 96 96 97 100,96 96 96 96 96 97 96,96 96 96 96 96 97 97,96 96 96 96 97 96 100,96 96 96 96 97 96 96,96 96 96 96 97 96 97,96 96 96 96 97 97 100,96 96 96 96 97 97 96,96 96 96 96 97 97 97,96 96 96 97 96 96 100,96 96 96 97 96 96 96,96 96 96 97 96 96 97,96 96 96 97 96 97 100,96 96 96 97 96 97 96,96 96 96 97 96 97 97,96 96 96 97 97 96 100,96 96 96 97 97 96 96,96 96 96 97 97 96 97,96 96 96 97 97 97 100,96 96 96 97 97 97 96,96 96 96 97 97 97 97,96 96 97 96 96 96 100,96 96 97 96 96 96 96,96 96 97 96 96 96 97,96 96 97 96 96 97 100,96 96 97 96 96 97 96,96 96 97 96 96 97 97,96 96 97 96 97 96 100,96 96 97 96 97 96 96,96 96 97 96 97 96 97,96 96 97 96 97 97 100,96 96 97 96 97 97 96,96 96 97 96 97 97 97,96 96 97 97 96 96 100,96 96 97 97 96 96 96,96 96 97 97 96 96 97,96 96 97 97 96 97 100,96 96 97 97 96 97 96,96 96 97 97 96 97 97,96 96 97 97 97 96 100,96 96 97 97 97 96 96,96 96 97 97 97 96 97,96 96 97 97 97 97 100,96 96 97 97 97 97 96,96 96 97 97 97 97 97,96 97 96 96 96 96 100,96 97 96 96 96 96 96,96 97 96 96 96 96 97,96 97 96 96 96 97 100,96 97 96 96 96 97 96,96 97 96 96 96 97 97,96 97 96 96 97 96 100,96 97 96 96 97 96 96,96 97 96 96 97 96 97,96 97 96 96 97 97 100,96 97 96 96 97 97 96,96 97 96 96 97 97 97,96 97 96 97 96 96 100,96 97 96 97 96 96 96,96 97 96 97 96 96 97,96 97 96 97 96 97 100,96 97 96 97 96 97 96,96 97 96 97 96 97 97,96 97 96 97 97 96 100,96 97 96 97 97 96 96,96 97 96 97 97 96 97,96 97 96 97 97 97 100,96 97 96 97 97 97 96,96 97 96 97 97 97 97,96 97 97 96 96 96 100,96 97 97 96 96 96 96,96 97 97 96 96 96 97,96 97 97 96 96 97 100,96 97 97 96 96 97 96,96 97 97 96 96 97 97,96 97 97 96 97 96 100,96 97 97 96 97 96 96,96 97 97 96 97 96 97,96 97 97 96 97 97 100,96 97 97 96 97 97 96,96 97 97 96 97 97 97,96 97 97 97 96 96 100,96 97 97 97 96 96 96,96 97 97 97 96 96 97,96 97 97 97 96 97 100,96 97 97 97 96 97 96,96 97 97 97 96 97 97,96 97 97 97 97 96 100,96 97 97 97 97 96 96,96 97 97 97 97 96 97,96 97 97 97 97 97 100,96 97 97 97 97 97 96,96 97 97 97 97 97 97,97 96 96 96 96 96 100,97 96 96 96 96 96 96,97 96 96 96 96 96 97,97 96 96 96 96 97 100,97 96 96 96 96 97 96,97 96 96 96 96 97 97,97 96 96 96 97 96 100,97 96 96 96 97 96 96,97 96 96 96 97 96 97,97 96 96 96 97 97 100,97 96 96 96 97 97 96,97 96 96 96 97 97 97,97 96 96 97 96 96 100,97 96 96 97 96 96 96,97 96 96 97 96 96 97,97 96 96 97 96 97 100,97 96 96 97 96 97 96,97 96 96 97 96 97 97,97 96 96 97 97 96 100,97 96 96 97 97 96 96,97 96 96 97 97 96 97,97 96 96 97 97 97 100,97 96 96 97 97 97 96,97 96 96 97 97 97 97,97 96 97 96 96 96 100,97 96 97 96 96 96 96,97 96 97 96 96 96 97,97 96 97 96 96 97 100,97 96 97 96 96 97 96,97 96 97 96 96 97 97,97 96 97 96 97 96 100,97 96 97 96 97 96 96,97 96 97 96 97 96 97,97 96 97 96 97 97 100,97 96 97 96 97 97 96,97 96 97 96 97 97 97,97 96 97 97 96 96 100,97 96 97 97 96 96 96,97 96 97 97 96 96 97,97 96 97 97 96 97 100,97 96 97 97 96 97 96,97 96 97 97 96 97 97,97 96 97 97 97 96 100,97 96 97 97 97 96 96,97 96 97 97 97 96 97,97 96 97 97 97 97 100,97 96 97 97 97 97 96,97 96 97 97 97 97 97,97 97 96 96 96 96 100,97 97 96 96 96 96 96,97 97 96 96 96 96 97,97 97 96 96 96 97 100,97 97 96 96 96 97 96,97 97 96 96 96 97 97,97 97 96 96 97 96 100,97 97 96 96 97 96 96,97 97 96 96 97 96 97,97 97 96 96 97 97 100,97 97 96 96 97 97 96,97 97 96 96 97 97 97,97 97 96 97 96 96 100,97 97 96 97 96 96 96,97 97 96 97 96 96 97,97 97 96 97 96 97 100,97 97 96 97 96 97 96,97 97 96 97 96 97 97,97 97 96 97 97 96 100,97 97 96 97 97 96 96,97 97 96 97 97 96 97,97 97 96 97 97 97 100,97 97 96 97 97 97 96,97 97 96 97 97 97 97,97 97 97 96 96 96 100,97 97 97 96 96 96 96,97 97 97 96 96 96 97,97 97 97 96 96 97 100,97 97 97 96 96 97 96,97 97 97 96 96 97 97,97 97 97 96 97 96 100,97 97 97 96 97 96 96,97 97 97 96 97 96 97,97 97 97 96 97 97 100,97 97 97 96 97 97 96,97 97 97 96 97 97 97,97 97 97 97 96 96 100,97 97 97 97 96 96 96,97 97 97 97 96 96 97,97 97 97 97 96 97 100,97 97 97 97 96 97 96,97 97 97 97 96 97 97,97 97 97 97 97 96 100,97 97 97 97 97 96 96,97 97 97 97 97 96 97,97 97 97 97 97 97 100,97 97 97 97 97 97 96,97 97 97 97 97 97 97
5000