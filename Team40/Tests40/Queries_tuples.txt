1 - all procedures that calls another procedure (procedure declaration, tuple with 2 variables return)
procedure p1, p2;
Select <p1, p2> such that Calls(p1, p2)
proc1 proc2,proc1 proc3,proc1 proc4,proc1 proc5,proc1 proc6,proc1 proc7,proc2 proc3,proc2 proc4,proc2 proc5,proc2 proc6,proc2 proc7,proc3 proc4,proc3 proc5,proc3 proc6,proc3 proc7,proc4 proc5,proc4 proc6,proc4 proc7,proc5 proc6,proc5 proc7,proc6 proc7
5000
2 - all procedures that calls another procedure that calls itself i.e. semantically invalid, return none (procedure declaration, tuple with 2 variables return)
procedure p1, p2;
Select <p1, p2> such that Calls(p1, p2) and Calls(p2, p1)
none
5000
3 - all procedures that calls another procedure that calls another procedure (procedure declaration, tuple with 3 variables return)
procedure p1, p2, p3;
Select <p1, p2, p3> such that Calls(p1 ,p2) and Calls(p2, p3) 
proc1 proc2 proc3,proc1 proc2 proc4,proc1 proc2 proc5,proc1 proc2 proc6,proc1 proc2 proc7,proc1 proc3 proc4,proc1 proc3 proc5,proc1 proc3 proc6,proc1 proc3 proc7,proc1 proc4 proc5,proc1 proc4 proc6,proc1 proc4 proc7,proc1 proc5 proc6,proc1 proc5 proc7,proc1 proc6 proc7,proc2 proc3 proc4,proc2 proc3 proc5,proc2 proc3 proc6,proc2 proc3 proc7,proc2 proc4 proc5,proc2 proc4 proc6,proc2 proc4 proc7,proc2 proc5 proc6,proc2 proc5 proc7,proc2 proc6 proc7,proc3 proc4 proc5,proc3 proc4 proc6,proc3 proc4 proc7,proc3 proc5 proc6,proc3 proc5 proc7,proc3 proc6 proc7,proc4 proc5 proc6,proc4 proc5 proc7,proc4 proc6 proc7,proc5 proc6 proc7
5000
4 - all procedures that calls another procedure that calls another procedure that... (procedure declaration, tuple with 4 variables return)
procedure p1, p2, p3, p4;
Select <p1, p2, p3, p4> such that Calls(p1 ,p2) and Calls(p2, p3) and Calls(p3, p4) 
proc1 proc2 proc3 proc4,proc1 proc2 proc3 proc5,proc1 proc2 proc3 proc6,proc1 proc2 proc3 proc7,proc1 proc2 proc4 proc5,proc1 proc2 proc4 proc6,proc1 proc2 proc4 proc7,proc1 proc2 proc5 proc6,proc1 proc2 proc5 proc7,proc1 proc2 proc6 proc7,proc1 proc3 proc4 proc5,proc1 proc3 proc4 proc6,proc1 proc3 proc4 proc7,proc1 proc3 proc5 proc6,proc1 proc3 proc5 proc7,proc1 proc3 proc6 proc7,proc1 proc4 proc5 proc6,proc1 proc4 proc5 proc7,proc1 proc4 proc6 proc7,proc1 proc5 proc6 proc7,proc2 proc3 proc4 proc5,proc2 proc3 proc4 proc6,proc2 proc3 proc4 proc7,proc2 proc3 proc5 proc6,proc2 proc3 proc5 proc7,proc2 proc3 proc6 proc7,proc2 proc4 proc5 proc6,proc2 proc4 proc5 proc7,proc2 proc4 proc6 proc7,proc2 proc5 proc6 proc7,proc3 proc4 proc5 proc6,proc3 proc4 proc5 proc7,proc3 proc4 proc6 proc7,proc3 proc5 proc6 proc7,proc4 proc5 proc6 proc7
5000
5 - all procedures that calls another procedure that calls another procedure that... (procedure declaration, tuple with 7 variables return)
procedure p1, p2, p3, p4, p5, p6, p7;
Select <p1, p2, p3, p4, p5, p6, p7> such that Calls(p1 ,p2) and Calls(p2, p3) and Calls(p3, p4) and Calls(p4, p5) and Calls(p5, p6) and Calls(p6, p7)    
proc1 proc2 proc3 proc4 proc5 proc6 proc7
5000
6 - all procedures that calls* another procedure (procedure declaration, tuple with 2 variables return)
procedure p1,  p2;
Select <p1, p2> such that Calls*(p1 ,p2)
proc1 proc2,proc1 proc3,proc1 proc4,proc1 proc5,proc1 proc6,proc1 proc7,proc2 proc3,proc2 proc4,proc2 proc5,proc2 proc6,proc2 proc7,proc3 proc4,proc3 proc5,proc3 proc6,proc3 proc7,proc4 proc5,proc4 proc6,proc4 proc7,proc5 proc6,proc5 proc7,proc6 proc7
5000
7 - all procedures that calls* another procedure that calls itself i.e. semantically invalid, return none (procedure declaration, tuple with 2 variables return)
procedure p1,  p2;
Select <p1, p2> such that Calls*(p1 ,p2) and Calls*(p2 ,p1)
none
5000
8 - all procedures that calls* another procedure that calls* another procedure (procedure declaration, tuple with 3 variables return)
procedure p1,  p2, p3;
Select <p1, p2, p3> such that Calls*(p1 ,p2) and Calls*(p2 ,p3)
proc1 proc2 proc3,proc1 proc2 proc4,proc1 proc2 proc5,proc1 proc2 proc6,proc1 proc2 proc7,proc1 proc3 proc4,proc1 proc3 proc5,proc1 proc3 proc6,proc1 proc3 proc7,proc1 proc4 proc5,proc1 proc4 proc6,proc1 proc4 proc7,proc1 proc5 proc6,proc1 proc5 proc7,proc1 proc6 proc7,proc2 proc3 proc4,proc2 proc3 proc5,proc2 proc3 proc6,proc2 proc3 proc7,proc2 proc4 proc5,proc2 proc4 proc6,proc2 proc4 proc7,proc2 proc5 proc6,proc2 proc5 proc7,proc2 proc6 proc7,proc3 proc4 proc5,proc3 proc4 proc6,proc3 proc4 proc7,proc3 proc5 proc6,proc3 proc5 proc7,proc3 proc6 proc7,proc4 proc5 proc6,proc4 proc5 proc7,proc4 proc6 proc7,proc5 proc6 proc7
5000
9 - all procedures that calls* another procedure that calls* another procedure that... (procedure declaration, tuple with 4 variables return)
procedure p1,  p2, p3, p4;
Select <p1, p2, p3, p4> such that Calls*(p1 ,p2) and Calls*(p2 ,p3) and Calls*(p3 ,p4)
proc1 proc2 proc3 proc4,proc1 proc2 proc3 proc5,proc1 proc2 proc3 proc6,proc1 proc2 proc3 proc7,proc1 proc2 proc4 proc5,proc1 proc2 proc4 proc6,proc1 proc2 proc4 proc7,proc1 proc2 proc5 proc6,proc1 proc2 proc5 proc7,proc1 proc2 proc6 proc7,proc1 proc3 proc4 proc5,proc1 proc3 proc4 proc6,proc1 proc3 proc4 proc7,proc1 proc3 proc5 proc6,proc1 proc3 proc5 proc7,proc1 proc3 proc6 proc7,proc1 proc4 proc5 proc6,proc1 proc4 proc5 proc7,proc1 proc4 proc6 proc7,proc1 proc5 proc6 proc7,proc2 proc3 proc4 proc5,proc2 proc3 proc4 proc6,proc2 proc3 proc4 proc7,proc2 proc3 proc5 proc6,proc2 proc3 proc5 proc7,proc2 proc3 proc6 proc7,proc2 proc4 proc5 proc6,proc2 proc4 proc5 proc7,proc2 proc4 proc6 proc7,proc2 proc5 proc6 proc7,proc3 proc4 proc5 proc6,proc3 proc4 proc5 proc7,proc3 proc4 proc6 proc7,proc3 proc5 proc6 proc7,proc4 proc5 proc6 proc7
5000
10 - all procedures that calls* another procedure that calls* another procedure that... (procedure declaration, tuple with 7 variables return)
procedure p1, p2, p3, p4, p5, p6, p7;
Select <p1, p2, p3, p4, p5, p6, p7> such that Calls*(p1 ,p2) and Calls*(p2, p3) and Calls*(p3, p4) and Calls*(p4, p5) and Calls*(p5, p6) and Calls*(p6, p7)
proc1 proc2 proc3 proc4 proc5 proc6 proc7
5000
11 - all program lines that execute next after another program line (read declaration, tuple with 2 variables return)
call r1, r2;
Select <r1, r2> such that Next(r1, r2)
114 117,15 18,80 87
5000
12 - all program lines that execute next after another program line that executes itself next (read declaration, tuple with 2 variables return)
assign r1, r2;
Select <r1, r2> such that Next(r1, r2) and Next(r2, r1)
none
5000
13 - all program lines that execute next after another program line that execute next after another program line (read declaration, tuple with 3 variables return)
print r1, r2, r3;
Select <r1, r2, r3> such that Next(r1 ,r2) and Next(r2, r3) 
38 39 40
5000
14 - all program lines that execute next after another program line that execute next after another program line that executes itself next (read declaration, tuple with 3 variables return)
stmt r1, r2, r3;
Select <r1, r2, r3> such that Next(r1 ,r2) and Next(r2, r3) and Next(r3, r1)
104 105 106,105 106 104,106 104 105
5000
15 - all program lines that execute next after another program line that execute next... (read declaration, tuple with 4 variables return)
read r1, r2, r3, r4;
Select <r1, r2, r3, r4> such that Next(r1 ,r2) and Next(r2, r3) and Next(r3, r4) 
1 2 3 4
5000
16 - all program lines that execute next after another program line that execute next... (read declaration, tuple with 10 variables return)
prog_line r1, r2, r3, r4, r5, r6, r7, r8, r9, r10;
Select <r1, r2, r3, r4, r5, r6, r7, r8, r9, r10> such that Next(r1 ,r2) and Next(r2, r3) and Next(r3, r4) and Next(r4, r5) and Next(r5, r6) and Next(r6, r7) and Next(r7, r8) and Next(r8, r9) and Next(r9, r10)    
1 2 3 4 5 6 7 21 22 23,1 2 3 4 5 6 7 8 9 10,1 2 3 4 5 6 7 8 9 20,10 11 12 13 14 15 18 19 9 10,10 11 12 13 14 15 18 19 9 20,10 11 12 16 17 18 19 9 10 11,10 11 12 16 17 18 19 9 20 35,102 103 104 105 106 104 105 106 104 105,102 103 104 105 106 104 105 106 104 107,103 104 105 106 104 105 106 104 105 106,103 104 105 106 104 105 106 104 107 108,104 105 106 104 105 106 104 105 106 104,105 106 104 105 106 104 105 106 104 105,105 106 104 105 106 104 105 106 104 107,106 104 105 106 104 105 106 104 105 106,106 104 105 106 104 105 106 104 107 108,11 12 13 14 15 18 19 9 10 11,11 12 13 14 15 18 19 9 20 35,11 12 16 17 18 19 9 10 11 12,11 12 16 17 18 19 9 20 35 36,12 13 14 15 18 19 9 10 11 12,12 13 14 15 18 19 9 20 35 36,12 16 17 18 19 9 10 11 12 13,12 16 17 18 19 9 10 11 12 16,12 16 17 18 19 9 20 35 36 37,13 14 15 18 19 9 10 11 12 13,13 14 15 18 19 9 10 11 12 16,13 14 15 18 19 9 20 35 36 37,14 15 18 19 9 10 11 12 13 14,14 15 18 19 9 10 11 12 16 17,14 15 18 19 9 20 35 36 37 38,15 18 19 9 10 11 12 13 14 15,15 18 19 9 10 11 12 16 17 18,15 18 19 9 20 35 36 37 38 39,16 17 18 19 9 10 11 12 13 14,16 17 18 19 9 10 11 12 16 17,16 17 18 19 9 20 35 36 37 38,17 18 19 9 10 11 12 13 14 15,17 18 19 9 10 11 12 16 17 18,17 18 19 9 20 35 36 37 38 39,18 19 9 10 11 12 13 14 15 18,18 19 9 10 11 12 16 17 18 19,18 19 9 20 35 36 37 38 39 40,19 9 10 11 12 13 14 15 18 19,19 9 10 11 12 16 17 18 19 9,2 3 4 5 6 7 21 22 23 24,2 3 4 5 6 7 21 22 23 33,2 3 4 5 6 7 8 9 10 11,2 3 4 5 6 7 8 9 20 35,21 22 23 24 25 26 27 28 32 23,21 22 23 24 25 29 30 31 32 23,21 22 23 33 34 35 36 37 38 39,22 23 24 25 26 27 28 32 23 24,22 23 24 25 26 27 28 32 23 33,22 23 24 25 29 30 31 32 23 24,22 23 24 25 29 30 31 32 23 33,22 23 33 34 35 36 37 38 39 40,23 24 25 26 27 28 32 23 24 25,23 24 25 26 27 28 32 23 33 34,23 24 25 29 30 31 32 23 24 25,23 24 25 29 30 31 32 23 33 34,24 25 26 27 28 32 23 24 25 26,24 25 26 27 28 32 23 24 25 29,24 25 26 27 28 32 23 33 34 35,24 25 29 30 31 32 23 24 25 26,24 25 29 30 31 32 23 24 25 29,24 25 29 30 31 32 23 33 34 35,25 26 27 28 32 23 24 25 26 27,25 26 27 28 32 23 24 25 29 30,25 26 27 28 32 23 33 34 35 36,25 29 30 31 32 23 24 25 26 27,25 29 30 31 32 23 24 25 29 30,25 29 30 31 32 23 33 34 35 36,26 27 28 32 23 24 25 26 27 28,26 27 28 32 23 24 25 29 30 31,26 27 28 32 23 33 34 35 36 37,27 28 32 23 24 25 26 27 28 32,27 28 32 23 24 25 29 30 31 32,27 28 32 23 33 34 35 36 37 38,28 32 23 24 25 26 27 28 32 23,28 32 23 24 25 29 30 31 32 23,28 32 23 33 34 35 36 37 38 39,29 30 31 32 23 24 25 26 27 28,29 30 31 32 23 24 25 29 30 31,29 30 31 32 23 33 34 35 36 37,3 4 5 6 7 21 22 23 24 25,3 4 5 6 7 21 22 23 33 34,3 4 5 6 7 8 9 10 11 12,3 4 5 6 7 8 9 20 35 36,30 31 32 23 24 25 26 27 28 32,30 31 32 23 24 25 29 30 31 32,30 31 32 23 33 34 35 36 37 38,31 32 23 24 25 26 27 28 32 23,31 32 23 24 25 29 30 31 32 23,31 32 23 33 34 35 36 37 38 39,32 23 24 25 26 27 28 32 23 24,32 23 24 25 26 27 28 32 23 33,32 23 24 25 29 30 31 32 23 24,32 23 24 25 29 30 31 32 23 33,32 23 33 34 35 36 37 38 39 40,4 5 6 7 21 22 23 24 25 26,4 5 6 7 21 22 23 24 25 29,4 5 6 7 21 22 23 33 34 35,4 5 6 7 8 9 10 11 12 13,4 5 6 7 8 9 10 11 12 16,4 5 6 7 8 9 20 35 36 37,41 42 43 44 45 46 47 48 49 50,41 42 43 44 45 46 47 66 67 68,42 43 44 45 46 47 48 49 50 51,42 43 44 45 46 47 48 49 50 57,42 43 44 45 46 47 66 67 68 69,43 44 45 46 47 48 49 50 51 52,43 44 45 46 47 48 49 50 57 58,43 44 45 46 47 66 67 68 69 70,44 45 46 47 48 49 50 51 52 53,44 45 46 47 48 49 50 51 52 56,44 45 46 47 48 49 50 57 58 59,44 45 46 47 66 67 68 69 70 71,45 46 47 48 49 50 51 52 53 54,45 46 47 48 49 50 51 52 56 64,45 46 47 48 49 50 57 58 59 60,45 46 47 48 49 50 57 58 59 63,46 47 48 49 50 51 52 53 54 55,46 47 48 49 50 51 52 56 64 65,46 47 48 49 50 57 58 59 60 61,46 47 48 49 50 57 58 59 63 64,47 48 49 50 51 52 53 54 55 52,47 48 49 50 51 52 56 64 65 47,47 48 49 50 57 58 59 60 61 62,47 48 49 50 57 58 59 63 64 65,48 49 50 51 52 53 54 55 52 53,48 49 50 51 52 53 54 55 52 56,48 49 50 51 52 56 64 65 47 48,48 49 50 51 52 56 64 65 47 66,48 49 50 57 58 59 60 61 62 59,48 49 50 57 58 59 63 64 65 47,49 50 51 52 53 54 55 52 53 54,49 50 51 52 53 54 55 52 56 64,49 50 51 52 56 64 65 47 48 49,49 50 51 52 56 64 65 47 66 67,49 50 57 58 59 60 61 62 59 60,49 50 57 58 59 60 61 62 59 63,49 50 57 58 59 63 64 65 47 48,49 50 57 58 59 63 64 65 47 66,5 6 7 21 22 23 24 25 26 27,5 6 7 21 22 23 24 25 29 30,5 6 7 21 22 23 33 34 35 36,5 6 7 8 9 10 11 12 13 14,5 6 7 8 9 10 11 12 16 17,5 6 7 8 9 20 35 36 37 38,50 51 52 53 54 55 52 53 54 55,50 51 52 53 54 55 52 56 64 65,50 51 52 56 64 65 47 48 49 50,50 51 52 56 64 65 47 66 67 68,50 57 58 59 60 61 62 59 60 61,50 57 58 59 60 61 62 59 63 64,50 57 58 59 63 64 65 47 48 49,50 57 58 59 63 64 65 47 66 67,51 52 53 54 55 52 53 54 55 52,51 52 53 54 55 52 56 64 65 47,51 52 56 64 65 47 48 49 50 51,51 52 56 64 65 47 48 49 50 57,51 52 56 64 65 47 66 67 68 69,52 53 54 55 52 53 54 55 52 53,52 53 54 55 52 53 54 55 52 56,52 53 54 55 52 56 64 65 47 48,52 53 54 55 52 56 64 65 47 66,52 56 64 65 47 48 49 50 51 52,52 56 64 65 47 48 49 50 57 58,52 56 64 65 47 66 67 68 69 70,53 54 55 52 53 54 55 52 53 54,53 54 55 52 53 54 55 52 56 64,53 54 55 52 56 64 65 47 48 49,53 54 55 52 56 64 65 47 66 67,54 55 52 53 54 55 52 53 54 55,54 55 52 53 54 55 52 56 64 65,54 55 52 56 64 65 47 48 49 50,54 55 52 56 64 65 47 66 67 68,55 52 53 54 55 52 53 54 55 52,55 52 53 54 55 52 56 64 65 47,55 52 56 64 65 47 48 49 50 51,55 52 56 64 65 47 48 49 50 57,55 52 56 64 65 47 66 67 68 69,56 64 65 47 48 49 50 51 52 53,56 64 65 47 48 49 50 51 52 56,56 64 65 47 48 49 50 57 58 59,56 64 65 47 66 67 68 69 70 71,57 58 59 60 61 62 59 60 61 62,57 58 59 60 61 62 59 63 64 65,57 58 59 63 64 65 47 48 49 50,57 58 59 63 64 65 47 66 67 68,58 59 60 61 62 59 60 61 62 59,58 59 60 61 62 59 63 64 65 47,58 59 63 64 65 47 48 49 50 51,58 59 63 64 65 47 48 49 50 57,58 59 63 64 65 47 66 67 68 69,59 60 61 62 59 60 61 62 59 60,59 60 61 62 59 60 61 62 59 63,59 60 61 62 59 63 64 65 47 48,59 60 61 62 59 63 64 65 47 66,59 63 64 65 47 48 49 50 51 52,59 63 64 65 47 48 49 50 57 58,59 63 64 65 47 66 67 68 69 70,6 7 21 22 23 24 25 26 27 28,6 7 21 22 23 24 25 29 30 31,6 7 21 22 23 33 34 35 36 37,6 7 8 9 10 11 12 13 14 15,6 7 8 9 10 11 12 16 17 18,6 7 8 9 20 35 36 37 38 39,60 61 62 59 60 61 62 59 60 61,60 61 62 59 60 61 62 59 63 64,60 61 62 59 63 64 65 47 48 49,60 61 62 59 63 64 65 47 66 67,61 62 59 60 61 62 59 60 61 62,61 62 59 60 61 62 59 63 64 65,61 62 59 63 64 65 47 48 49 50,61 62 59 63 64 65 47 66 67 68,62 59 60 61 62 59 60 61 62 59,62 59 60 61 62 59 63 64 65 47,62 59 63 64 65 47 48 49 50 51,62 59 63 64 65 47 48 49 50 57,62 59 63 64 65 47 66 67 68 69,63 64 65 47 48 49 50 51 52 53,63 64 65 47 48 49 50 51 52 56,63 64 65 47 48 49 50 57 58 59,63 64 65 47 66 67 68 69 70 71,64 65 47 48 49 50 51 52 53 54,64 65 47 48 49 50 51 52 56 64,64 65 47 48 49 50 57 58 59 60,64 65 47 48 49 50 57 58 59 63,65 47 48 49 50 51 52 53 54 55,65 47 48 49 50 51 52 56 64 65,65 47 48 49 50 57 58 59 60 61,65 47 48 49 50 57 58 59 63 64,7 21 22 23 24 25 26 27 28 32,7 21 22 23 24 25 29 30 31 32,7 21 22 23 33 34 35 36 37 38,7 8 9 10 11 12 13 14 15 18,7 8 9 10 11 12 16 17 18 19,7 8 9 20 35 36 37 38 39 40,72 73 74 75 76 77 78 75 76 77,72 73 74 75 76 77 78 75 79 80,72 73 81 82 83 84 85 82 83 84,72 73 81 82 83 84 85 82 86 87,73 74 75 76 77 78 75 76 77 78,73 74 75 76 77 78 75 79 80 87,73 81 82 83 84 85 82 83 84 85,73 81 82 83 84 85 82 86 87 88,74 75 76 77 78 75 76 77 78 75,74 75 76 77 78 75 79 80 87 88,75 76 77 78 75 76 77 78 75 76,75 76 77 78 75 76 77 78 75 79,76 77 78 75 76 77 78 75 76 77,76 77 78 75 76 77 78 75 79 80,77 78 75 76 77 78 75 76 77 78,77 78 75 76 77 78 75 79 80 87,78 75 76 77 78 75 76 77 78 75,78 75 76 77 78 75 79 80 87 88,8 9 10 11 12 13 14 15 18 19,8 9 10 11 12 16 17 18 19 9,81 82 83 84 85 82 83 84 85 82,82 83 84 85 82 83 84 85 82 83,82 83 84 85 82 83 84 85 82 86,83 84 85 82 83 84 85 82 83 84,83 84 85 82 83 84 85 82 86 87,84 85 82 83 84 85 82 83 84 85,84 85 82 83 84 85 82 86 87 88,85 82 83 84 85 82 83 84 85 82,89 90 91 92 93 94 95 99 90 100,89 90 91 92 93 94 95 99 90 91,89 90 91 92 96 97 98 99 90 100,89 90 91 92 96 97 98 99 90 91,9 10 11 12 13 14 15 18 19 9,9 10 11 12 16 17 18 19 9 10,9 10 11 12 16 17 18 19 9 20,90 91 92 93 94 95 99 90 100 101,90 91 92 93 94 95 99 90 91 92,90 91 92 96 97 98 99 90 100 101,90 91 92 96 97 98 99 90 91 92,91 92 93 94 95 99 90 91 92 93,91 92 93 94 95 99 90 91 92 96,91 92 96 97 98 99 90 91 92 93,91 92 96 97 98 99 90 91 92 96,92 93 94 95 99 90 91 92 93 94,92 93 94 95 99 90 91 92 96 97,92 96 97 98 99 90 91 92 93 94,92 96 97 98 99 90 91 92 96 97,93 94 95 99 90 91 92 93 94 95,93 94 95 99 90 91 92 96 97 98,94 95 99 90 91 92 93 94 95 99,94 95 99 90 91 92 96 97 98 99,95 99 90 91 92 93 94 95 99 90,95 99 90 91 92 96 97 98 99 90,96 97 98 99 90 91 92 93 94 95,96 97 98 99 90 91 92 96 97 98,97 98 99 90 91 92 93 94 95 99,97 98 99 90 91 92 96 97 98 99,98 99 90 91 92 93 94 95 99 90,98 99 90 91 92 96 97 98 99 90,99 90 91 92 93 94 95 99 90 100,99 90 91 92 93 94 95 99 90 91,99 90 91 92 96 97 98 99 90 100,99 90 91 92 96 97 98 99 90 91
5000
17 - all program lines that execute next* after another program line (read declaration, tuple with 2 variables return)
if r1,  r2;
Select <r1, r2> such that Next*(r1 ,r2)
12 12,25 25,50 50,7 12,7 25,92 92
5000
18 - all program lines that execute next* after another program line that executes itself next* (read declaration, tuple with 2 variables return)
while r1,  r2;
Select <r1, r2> such that Next*(r1 ,r2) and Next*(r2 ,r1)
104 104,23 23,47 47,47 52,47 59,52 47,52 52,52 59,59 47,59 52,59 59,75 75,82 82,9 9,90 90
5000
19 - all program lines that execute next* after another program line that execute next* after another program line (read declaration, tuple with 2 variables return)
if r1,  r2, r3;
Select <r1, r2, r3> such that Next*(r1 ,r2) and Next*(r2 ,r3)
12 12 12,25 25 25,50 50 50,7 12 12,7 25 25,92 92 92
5000
20 - all program lines that execute next* after another program line that execute next* after another program line that executes itself next* (read declaration, tuple with 2 variables return)
while r1,  r2, r3;
Select <r1, r2, r3> such that Next*(r1 ,r2) and Next*(r2 ,r3) and Next*(r3 ,r1)
104 104 104,23 23 23,47 47 47,47 47 52,47 47 59,47 52 47,47 52 52,47 52 59,47 59 47,47 59 52,47 59 59,52 47 47,52 47 52,52 47 59,52 52 47,52 52 52,52 52 59,52 59 47,52 59 52,52 59 59,59 47 47,59 47 52,59 47 59,59 52 47,59 52 52,59 52 59,59 59 47,59 59 52,59 59 59,75 75 75,82 82 82,9 9 9,90 90 90
5000
21 - all program lines that execute next* after another program line that execute next*... (print declaration, tuple with 4 variables return)
if pr1, pr2, pr3, pr4;
Select <pr1, pr2, pr3, pr4> such that Next*(pr1 ,pr2) and Next*(pr2, pr3) and Next*(pr3, pr4) 
12 12 12 12,25 25 25 25,50 50 50 50,7 12 12 12,7 25 25 25,92 92 92 92
5000
22 - all program lines that execute next* after another program line that execute next*... (if declaration, tuple with 9 variables return)
if r1, r2, r3, r4, r5, r6, r7, r8, r9, r10;
Select <r1, r2, r3, r4, r5, r6, r7, r8, r9, r10> such that Next*(r1 ,r2) and Next*(r2, r3) and Next*(r3, r4) and Next*(r4, r5) and Next*(r5, r6) and Next*(r6, r7) and Next*(r7, r8) and Next*(r8, r9) and Next*(r9, r10)
12 12 12 12 12 12 12 12 12 12,25 25 25 25 25 25 25 25 25 25,50 50 50 50 50 50 50 50 50 50,7 12 12 12 12 12 12 12 12 12,7 25 25 25 25 25 25 25 25 25,92 92 92 92 92 92 92 92 92 92
5000
23 - all statements following some statement (assign declaration, tuple with 2 variables return)
assign a1, a2;
Select <a1, a2> such that Follows(a1, a2)
105 106,112 113,115 116,119 120,13 14,16 17,27 28,60 61,77 78,96 97
5000
24 - all statements following some statement that follows itself i.e. invalid (assign declaration, tuple with 2 variables return)
stmt a1, a2;
Select <a1, a2> such that Follows(a1, a2) and Follows(a2, a1)
none
5000
25 - all statements following some statement that follows another statement (prog_line declaration, tuple with 3 variables return)
print n1, n2, n3;
Select <n1, n2, n3> such that Follows(n1 ,n2) and Follows(n2, n3) 
38 39 40
5000
26 - all statements following some statement that follows another statement that... (assign declaration, tuple with 4 variables return)
read a1, a2, a3, a4;
Select <a1, a2, a3, a4> such that Follows(a1 ,a2) and Follows(a2, a3) and Follows(a3, a4) 
1 2 3 4
5000
27 - all statements following some statement that follows another statement that... (assign declaration, tuple with 10 variables return)
assign a1, a3; while a2;
Select <a1, a2, a3> such that Follows(a1 ,a2) and Follows(a2, a3)
46 47 66,51 52 56,58 59 63,74 75 79,8 9 20,81 82 86,89 90 100
5000
28 - all statements following* some statement (prog_line declaration, tuple with 2 variables return)
call n1,  n2;
Select <n1, n2> such that Follows*(n1 ,n2)
10 18,103 107,109 117,21 33,44 69,49 65,5 37
5000
29 - all statements following* some statement that follows itself i.e. invalid (prog_line declaration, tuple with 2 variables return)
stmt n1,  n2;
Select <n1, n2> such that Follows*(n1 ,n2) and Follows*(n2 ,n1)
none
5000
30 - all statements following* some statement that follows* another statement (assign declaration, tuple with 2 variables return)
read a1,  a2, a3;
Select <a1, a2, a3> such that Follows*(a1 ,a2) and Follows*(a2 ,a3)
1 2 3,1 2 4,1 3 4,2 3 4,41 42 43,41 42 45,41 43 45,42 43 45
5000
31 - all statements following* some statement that follows* another statement that... (prog_line declaration, tuple with 4 variables return)
print n1, n2, n3, n4;
Select <n1, n2, n3, n4> such that Follows*(n1 ,n2) and Follows*(n2, n3) and Follows*(n3, n4) 
36 38 39 40,67 68 70 71
5000
32 - all statements following* some statement that follows* another statement that.. (prog_line declaration, tuple with 9 variables return)
assign a1, a3; if a2;
Select <a1, a2, a3> such that Follows*(a1 ,a2) and Follows*(a2, a3)
11 12 19,110 111 118,24 25 32,48 50 64,6 7 35,72 73 88,91 92 99
5000
