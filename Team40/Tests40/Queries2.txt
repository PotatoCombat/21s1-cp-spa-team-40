1 - all statements
stmt s;
Select s
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
5000
2 - all read stmts
read r;
Select r
5, 14
5000
3 - all procedures
procedure p;
Select p
procName
5000
4 - All calls
call c;
Select c

5000
5 - all variables
variable v;
Select v
x, z, y, a, m, i, b, c, d, j, l, xyzaaaaaaaaaaaaaaaaaaaaaaaaalongvarnameeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, bigNum
5000
6 - all print
print p;
Select p
4, 23
5000
7 - constants no clause
constant  c;
Select c
7, 4, 5, 3, 6, 1, 10, 110, 44, 1098765432109876
5000
8 - if no clause
if  ifs;
Select              ifs
2, 6, 9, 17
5000
9 - while no clause
while     w;
Select  w
10, 12, 13, 19, 20
5000
10 - assign no clause
assign a;
Select a
1, 3, 7, 8, 11, 15, 16, 18, 21, 22, 24
5000
11 - fail - no semicolin
stmt s
Select s

5000
12 - Same name as keyword
stmt  s1, Select;
Select Select
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
5000
13 - parent with no child
stmt s;
Select s such that Parent(3, s)

5000
14 - statements that are a parent
stmt a, b;
Select a such   that Parent(a,     b)
2, 6, 9, 10, 12, 13, 17, 19, 20
5000
15 - stmt cant be its own parent
stmt s;
Select s such that Parent(s, s)

5000
16 - stmt cant be its own parent
stmt s;
Select s such that Parent*(s, s)

5000
17 - stmt cant follow itself
stmt s;
Select s such that Follows (s, s)

5000
18 - stmt cant follow* itself
stmt s;
Select s such that Follows* (s, s)

5000
19 - get all possible parents
stmt s;
Select s such that Parent* (s, 21)
2, 6, 9, 12, 17, 19, 20
5000
20 - no followed
stmt s;
Select s such that Follows(7, s)

5000
21 - no follower
stmt s;
Select s such that Follows(s, 7)

5000
22 - all followers
stmt s;
Select s such that Follows*(15, s)
16, 17
5000
23 - follows*
stmt s;
Select s such that Follows*(3, s)
4, 5, 6, 22, 23
5000
24 - get variables used by a statement
variable v;
Select v such that Uses(17, v)
a, b, c, z, x, y
5000
25 - get all statements that use a variable
stmt s;
Select s such that Uses(s, "a")
11, 16, 17, 10, 12, 2, 6, 9
5000
26 - All stmts that modify a variables
stmt s;
Select s such that Modifies(s, "a")
5, 14, 12, 13, 2, 6, 9
5000
27 - check if it comes before an if
if ifs;
Select ifs such that Follows     (1, ifs)
2
5000
28 - false follows condition
if ifs;
Select ifs such that Follows     (19, ifs)

5000
29 - everything that is an if that follows a statement
if    ifs;
Select ifs    such that     Follows*     (1, ifs)
2
5000
30 - false case for a while following a statement
while   w;
Select    w  such that     Follows*     (9, w)

5000
31 - statements that have a statement as a parent
assign a;
Select a   such that Parent     (2, a)
3, 24, 22
5000
32 - all parents
if    ifs     ;
Select ifs    such that Parent*  (2, ifs)
6, 9, 17
5000
33 - get all read statements that have a parent
read r; if ifs;
Select r such that Parent     (ifs, r)
5
5000
34 - synonym not in clause
assign a;  print p;
   Select a such that Follows(3, p)
1, 3, 7, 8, 11, 15, 16, 18, 21, 22, 24
5000
35 - a while inside a while
while w, w1;
Select w such that Parent*(w1, w)
13, 20, 19
5000
36 - synonym not in false relationship
assign a; if ifs;
Select ifs  such that  Follows(21, a)

5000
37 - false pattern
assign a;
Select a pattern   a ("bigNum",  _" 77 " _)

5000
38 - synonym not in true relationship
variable   v; while w;
Select v such that Parent*(2, w)
x, z, y, a, m, i, l, b, c, d, j, xyzaaaaaaaaaaaaaaaaaaaaaaaaalongvarnameeeeeeeeeeeeeeeeeeeeeeeeeeeeeee, bigNum
5000
39 - synonym in pattern but not relationship
stmt s; assign a; variable v;
Select a such that Modifies(s, v) pattern a(_, _"3"_)
7, 8
5000
40 - synonym not in false relationship
constant c; stmt s;
Select c such that Follows*(21,    s)

5000
41 - a while inside a while
while w, w1;
Select w1 such that Parent*(w1, w)
12, 19
5000
42 - one such that one pattern with 3 variables synonym in clause
stmt s; assign a; variable v, v1;
Select s such that Uses(s, v1) pattern a(v1, _)
1, 3, 7, 11, 16, 21, 10, 12, 13, 15, 17, 19, 2, 20, 23, 4, 6, 9
5000
43 - check for parent
procedure p;  while  w;
Select p such that Parent(w, 11)
procName
5000
44 - one such that one pattern with 3 variables synonym in clause
stmt s; assign a; variable v, v1;
Select a such that Uses(a, v1) pattern a(v, _"10    "_)

5000
45 - synonym not in false relationship
assign     a; if   ifs;
Select   a such that  Parent(ifs, 21)

5000
46 - synonym not in true relationship
constant  c; if ifs;
Select c such that Parent*(ifs, 9)
7, 4, 5, 3, 6, 1, 10, 110, 44, 1098765432109876
5000
47 - synonym not in true such that and pattern combination
assign a; variable v; print p;
Select p such that Uses(a, v) pattern a(_, _"3"  _)
4, 23
5000
48 - Synonym in relationship but not in pattern
assign a; while w; variable v;
Select w such that Parent*(w, a) pattern a(v, _"y"_)
19, 20, 12
5000
49 - Synonym in relationship but not in pattern and pattern is connected to synonym
assign a; stmt s;
Select s such that Follows(s, a) pattern a(_, _"d"_)
15
5000
50 - Synonym in relationship but not in pattern and pattern is connected to synonym
assign a; stmt s;
Select s such that Follows*(s, a) pattern a(_, _"d"_)
15, 13
5000
51 - follows* and pattern
stmt s; assign a;
Select s such that Follows*(s, a) pattern a("   d", _"a "_)
15, 13
5000
52 - uses and pattern
assign a; variable v;
Select a such that Uses(a, v) pattern a(v, _)
1, 3, 7, 11, 15, 16, 21
5000
53 - uses and pattern with no wildcards
assign a; while w; variable v;
Select a such that Uses(w, v) pattern a(v, _"y"_)
21, 15, 7
5000
54 - two synonyms in follows
print p; read r;
Select r  such that Follows   (p, r)
5
5000

