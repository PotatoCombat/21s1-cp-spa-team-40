procedure assign {
	x = 1 + 
		2 + 
		3 + 
		4 + 
		5 + 
		6 + 
		7 + 
		8 + 
		9 + 
		10 + 
		11 + 
		12 + 
		13 + 
		14 + 
		15 + 
		16 + 
		17 + 
		18 + 
		19 + 
		20;							
	x = (1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10) + 11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20;
	x = 1 + 2 +  3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + (11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20);
	x = 1 + 2 +  3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + (15 + 16 + 17 + 18 + 19 + 20);
	x = (1 + 2 + 3 + 4 + 5) * (11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20) + 6 + 7 + 8 + 9 + 10;
	x = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 - 9 - 10 - 11 - 12 - 13 - 14 - 15 + 16 + 17 + 18 + 19 + 20;
	x = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 - 9 - 10 - 11 - 12 - 13 - 14 - (15 + 16 + 17 + 18 + 19 + 20);
	x = (1 + 2) + (3 + 4) + (5 + 6) + (7 + 8 + 9) + 10 + (11 + 12 + 13 + 14 + 15 + 16 + 17 + 18 + 19 + 20);
	x = (3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14) / (1 + 2) + 15 + 16 + 17 + 18 + 19 + 20;
	x = (3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14) / 1 + 2 + 15 + 16 + 17 + 18 + 19 + 20;
	x = 1 + 2;
	x = (3 + 4);
	x = 5 + 6;
	x = 7+8+9;
	x = (1 + 2) + (3 + 4) + (5 + 6) + (7 + 8 + 9) + 10;
	x = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10;
	
	x20 = x1 + x2;
	x19 = (x1 + (x2 + x3));
	x18 = x3 + x4;
	x17 = x5 + x6;
	x16 = ((x7 + x8) + x9);
	x15 = ((x1 + x2) + (x3 + x4) + (x5 + x6) + (x7 + x8 + x9) + x10);
	x14 = x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10;
	x13 = x11 + x12;
	x12 = (x15 + x16 + x17 + x18 + x19 + x20);
	x11 = x12 + x13 + x14 + x15 + x16 + x17 + x18 + x19;
	
	x10 = x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 + x12 + x13 + x14 + x15 + x16 + x17 + x18 + x19 + x20;
	
	x9 = ((((((x1) + x2) + x3) + x4) + x5) + (x6) + (x7) + (x8) + (x9) + (x10)) + x11 + x12 + x13 + x14 + x15 + x16 + x17 + x18 + x19 + x20;
	
	x8 = x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + (x11 + x12 + x13 + x14 + x15 + x16 + x17 + x18 + x19 + x20);
	
	x7 = x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 + x12 + x13 + x14 + (x15 + x16 + x17 + x18 + x19 + x20);
	
	x6 = x1 + x2 + (x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10) + x11 + x12 + x13 + x14 + (x15 + x16 + x17 + x18 + x19 + x20);
	
	x5 = (x1 + x2 + x3 + x4 + x5) * (x11 + x12 + x13 + x14 + x15 + x16 + x17 + x18 + x19 + x20) + x6 + x7 + x8 + x9 + x10;
	
	x4 = x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 - x9 - x10 - x11 - x12 - x13 - x14 - x15 + x16 + x17 + x18 + x19 + x20;
	
	x3 = x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 - x9 - x10 - x11 - x12 - x13 - x14 - (x15 + x16 + x17 + x18 + x19 + x20);
	
	x2 = (x1 + x2) + (x3 + x4) + (x5 + x6) + (x7 + x8 + x9) + x10 + (x11 + x12 + x13 + x14 + x15 + x16 + x17 + x18 + x19 + x20);
	
	x1 = (x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 + x12 + x13 + x14) / (x1 + x2) + x15 + x16 + x17 + x18 + x19 + x20;
	
	x = (x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 + x12 + x13 + x14) / x1 + x2 + x15 + x16 + x17 + x18 + x19 + x20;
	
	x = (1 * x) + (2 - x) + (x * 3) + (x / 4) + (5 % x) + (x / 6) + (x + 7) + (8 / x) + (9 % x);

	x = x13 * x14 / (20 * x15) * x16 % x17 / x18 - x13 * x14 / (20 * x15) * x16 % x17 / x18 + 4;

	x = (x13 * x14 / (20 * x15) * x16 % x17 / x18);
	x = (x13 * x14 / (20 * x15) * x16 % x17 / x19);
	x = (x13 * x14 / (19 * x15) * x16 % x17 / x18);
	x = (x13 * x14 / (20 * x15) % x16 % x17 / x18);
	x = (x13 * x14 / (20 * x15) * x16 % x17 / (x18 + 5));

	y = (y + y) % (y - y * y) - y % y;
	y = ((y + y) % (y - (y * y))) - (y % y);
	y = (y + y) % (y - y * y) - y % y + (y + y) % (y - y * y) - y % y;
	y = (y + y) % (y - y * y) - y % y % (y - y * y) - y % y + (y + y) % (y - y * y) - y % y;
	y = (y + y) % (y - y * y + y + y) - y % y % (y - y + y - y * y) - y % y + (y - y + y + y) % (y - y * y) - y % y;
	y = y + ((y + y) % (y - y * y) - y % y % (y - y * y));
	y = (y + y + y % y + y) % (y - y * y) - y % y + (y + y) % (y - y * y) - y % y;
	y = (y + y) % (y - y * y) - y % y;
	y = (y + (y)) % ((y - y) * y) - y % y;
	y = ((y + (y)) % ((y - y) * y) - y) % y - ((y + (y)) % (y) - y) % y;
	y = ((y + y % y - (y * y))) - (y % y);
	y = ((y + y % y - y) * y) - (y % y);
	y = y + y % y - y * y - y % y + y + y % y - y * y - y % y;
	y = y + y % y - y * y - y % (y + y) + y % y - y * y - y % y;
	y = y + y % y - y * y - y % y;
	y = (y + y) % (y - y) * (y - y % y);
	y = ((y + y % y - y) * y) - (y % y);
	y = (y + y % y - y) * (y - y) % y;
	y = y + (y % y - y) * y - y % y;
	y = y * y * y / y * (y + y * ((y % y * y) + y - y));
	
	call while;
	call if;
	call mixed;
}

procedure while {
	while ((1 == d + e) || (1 == f + g)) {
		d = d % e % e % d;
		e = e % f % (e % e);
		f = f % g + f % e;
		while (!(((d < e) && (e >= f)) && (f == g))) {
			g = d % e % e % d;
		}
		d = a + e % e * h;
		f = a + d % (e * h);
		e = a + f % e * (h / e);
	}
	a = a + 1;
	b = b + 1;
	c = c + 1;
	g = a + b + (a + b / c) - (b / (a * a + (d - 1)) - f % e % d * 6 + c / 3) * 200 * (d * 200 + 7 * f);
	while (a * b * c < 200) {
		read g;
		while ((a * b * c > 0) && (a + b + c < 5)) {
			a = c - 1;
			b = a - 1;
			c = b - 1;
			while ((c != 0) && (a != 0) && (b != 0)) {
				a = b * c - 200 % d - (h / 2 + h / 2);
				b = a * c - 200 % d - (h / 2 + h / 2);
				c = c * a - 200 % d - (h / 2) + h / 2;
				while ((c != a) || (b == d)) {
					e = d % e % e % d;
					while (a < d) {
						e = f % (f * b - c + 100 / c);
					}
				}
				while ((b != a) || (b == a)) {
					read c;
					if (c == a) then {
						print h;
					} else {
						print a;
					}
					read a;
					print a;
				}
				while ((c != a) || (c == b)) {
					print h;
					if (b == 0) then {
						b = c;
					} else {
						b = ((b + 200) % (c - (100 * a * (b * c)))) - (f % g);
					}
					read a;
				}
			}
		}
	}
}

procedure if {
	if (a == 1) then {
		if (b == 2) then {
			if (c == 3) then {
				a = e % d % (d % e);
				b = f % e % (e % f) - d % d;
				c = 7 * f + f % g - 4 * 5 - e % f + 6;
			} else {
				a = b + 1 - c * 2 % 3 + b * c - e + f;
				b = a * c / 3 - a - 1 + a - c + e * f;
				c = a / b + (b - b % 2) * 1 - f - e / 3;
				if (h == 8) then {
					f = a - 1;
					e = b + 1;
					f = c - 1;
					d = a + b + c;
					c = b + 1;
					read x;
				} else {
					while (h > 0) {
						h = h - 1;
						a = b * c;
						b = c * a;
						c = a * b;
					}
				}
				a = e;
				b = f;
				c = g;
			}
		} else {
			e = b;
			f = b;
			read e;
			e = f + e;
		}
	} else {
		while (a != 1) {
			if (h == 8) then {
				print b;
				print h;
				if (a == h) then {
					h = a * 200;
				} else { 
					h = b * 200;
				}
				a = h;
			} else {
				if ((h == 7) || (h == 6)) then {
					a = 2;
				} else {
					a = h * g / (f % e);
				}
			}
		}
		read a;
		read b;
		read c;
		if (a == 1) then {
			d = (d + 1) - (d % e) + (e % d);
			e = (e + 1) - (e % f) + (f % e);
			f = (f + 1) - (f % g) + (g % f);
		} else {
			a = g + f;
			b = a - 1;
			c = b - 1;
		}
	}
}

procedure mixed {
	a = a + 1;
	if ((a > 1) && (a < 100)) then {
		a = a / 1;
		while (a <= b) {
			a = a - 1;
			if ((b > 1) && (b < 100)) then {
				b = b % 1;
				while (!((b <= c) || (c >= d))) {
					b = b - 1;
					c = c + 1;
					c = c - 1;
					c = c / 1;
					d = d / 1;
					d = d * 1;
				}
				b = b * 1;
			} else {
				b = b + 1;
				e = e + 1;
				while (!(e <= f)) {
					b = b / 1;
					while (e == f) {
						f = f - 1;
						e = e - 1;
						f = f + 1;
					}
					g = e + f;
					g = e % f;
					e = e / 1 - f / 1;
					while (e != f) {
						f = f / 1 - e / 1;
					}
					f = f % 1;
					e = e % 1;
					g = g + 1 - (g - 1);
					g = g % 1;
				}
				g = g / 1;
				e = e * 1;
				f = f * 1;
				g = g * 1;
			}
		}
		a = a % 1;
	} else {
		a = a * 1;
		h = 0;
		while (h > 0) {
			h = h + 1;
			while (h < 200) {
				h = h - 1;
				while (h < 175) {
					h = h * 1;
					while (h < 150) {
						h = h / 1;
						while (h < 125) {
							h = h % 1;
						}
						a = a + b;
					}
					b = b + c;
				}
				h = a + b + c;
				c = c + d;
				while (h > 100) {
					h = h + d + e + f;
				}
				g = h;
			}
			h = a + b + c + d + e + f + g;
			h = a + b + c + d + e + f + g + h;
		}
		while (h > 0) {
			h = h + 1;
			while (h < 200) {
				h = h - 1;
				while (h < 190) {
					h = h * 1;
					if (h < 180) then {
						h = h / 1;
						while (h < 170) {
							h = h % 1;
						}
						a = a + b;
					} else {
						b = b + c;
						h = a + b + c;
						c = c + d;
						while (h > 100) {
							a = h + d + e + f;
						}
						g = h;
					}
				}
			}
			h = a + b + c + d + e + f + g;
			h = a + b + c + d + e + f + g + h;
		}
		print h;
	}
}
